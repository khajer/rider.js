var auth = require('../helpers/auth.js')
var <%=model.titleModelName%> = require('../models/<%=model.modelName%>.js');


var authFunc = function(req, res, next){
	/*
	*  Authicate 
	*/
	if(req.cookies == undefined || req.cookies.logined == undefined || req.cookies.logined == false){
		res.sendStatus(403);
		return;
	}
	next();		
}

// main controller
var controller = {
	name: 'login',
	init:function(app){
		app.get('/login/index', function (req, res) {
			var paths = __dirname.split('/');
			var path = paths.slice(0, paths.length-1).join('/');
			var indexFilePath = path+"/views/login/index.html";
			res.sendFile(indexFilePath);
		});

		app.post('/login/checkLogin', function (req, res){
			var usr = req.body.username;
			var passwd = req.body.password;
			
			var objResp = {
				resCode:-1,
				resDesc:'login fails'
			}

			var passEnc = auth.hashCode(passwd);
			<%=model.titleModelName%>.findOne({username:usr, passwd:passEnc}, function(err, data){
				if(!err){
					objResp.data = data;
					objResp.resCode = 0;

					res.cookie('user_id', data._id, { maxAge: 900000, httpOnly: true })
					res.cookie('username',data.username, { maxAge: 900000, httpOnly: true })
					res.cookie('logined', true, { maxAge: 900000, httpOnly: true })
				}
				res.json(objResp);
			});
		});

		app.get('/login/register', function (req, res) {
			var paths = __dirname.split('/');
			var path = paths.slice(0, paths.length-1).join('/');
			var indexFilePath = path+"/views/login/register.html";
			res.sendFile(indexFilePath);
		});
		app.post('/login/register', function (req, res) {
			var objResp = {
				resCode:1,
				resDesc:'register fails'
			}

			<%=model.titleModelName%>.findOne({username:req.body.username}, function(err, data){
				if(err){
					res.json(objResp);	
					return;
				}
				if(data != undefined){
					objResp.resCode = 2;
					objResp.resDesc = 'dupplicate username';
					res.json(objResp);	
					return;
				}
				var passEnc = auth.hashCode(req.body.password);

				var params = req.body;
				params.password = passEnc;
				params.role_id = 1;

				<%=model.titleModelName%>.count({}, function(err, cnt){
					if(cnt <= 0){
						params.role_id = 0;					
					}
					var newData = <%=model.titleModelName%>(params)
					newData.save(function(err){
						if(err){
							res.json(objResp);	
							return;	
						}
						objResp.resCode = 0;
						objResp.resDesc = "";
						objResp.data = newData;
						res.json(objResp);	
					});		
				});	
			});	
		});

		//logout (2 method clear)
		app.post('/login/logout', function (req, res){
			res.clearCookie('logined');
			res.clearCookie('user_id');
			res.clearCookie('username');
			var objResp = {
				resCode:0,
				resDesc:'logout completed'
			}
			res.json(objResp);
		});
		app.get('/login/logout', function (req, res){
			res.clearCookie('logined');
			res.clearCookie('user_id');
			res.clearCookie('username');
			var objResp = {
				resCode:0,
				resDesc:'logout completed'
			}
			res.json(objResp);
		});

		// manage user pages
		// ------------------
		app.get('/login/manage', authFunc, function(req, res){
			var paths = __dirname.split('/');
			var path = paths.slice(0, paths.length-1).join('/');
			var indexFilePath = path+"/views/login/manage.html";
			res.sendFile(indexFilePath);
		});
	},
};
module.exports = controller;